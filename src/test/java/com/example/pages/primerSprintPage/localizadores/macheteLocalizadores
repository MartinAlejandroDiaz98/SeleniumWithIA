ðŸ”¹ Regla de oro (en empresas profesionales)
ID Ãºnico                    â†’ usar By.id o cssSelector.
Clases/Atributos            â†’ usar cssSelector.
Texto o combinaciones raras â†’ usar XPath.
/* ________________________________________________________________________________________ */
Orden recomendado de localizadores (de mejor a peor)
1 - By.id â†’ mÃ¡s rÃ¡pido, Ãºnico y confiable (siempre que el id sea estable).
driver.findElement(By.id("username"));
/* ________________________________________________________________________________________ */
2 - By.name â†’ Ãºtil si el atributo name es Ãºnico y consistente.
driver.findElement(By.name("password"));
/* ________________________________________________________________________________________ */
3 - By.cssSelector â†’ el mÃ¡s flexible y potente, preferido en proyectos modernos.
Ejemplos:
// por clase
driver.findElement(By.cssSelector(".btn-primary"));
// por atributo
driver.findElement(By.cssSelector("input[type='email']"));
// jerarquÃ­a
driver.findElement(By.cssSelector("form#login button[type='submit']"));
/* ________________________________________________________________________________________ */
4 - By.xpath â†’ potente pero menos legible y mÃ¡s frÃ¡gil. Se usa cuando no hay buenos id o css.
Ejemplos:
// por texto
driver.findElement(By.xpath("//button[text()='Login']"));
// por atributo
driver.findElement(By.xpath("//input[@name='email']"));
// por jerarquÃ­a
driver.findElement(By.xpath("//div[@class='menu']//a[contains(text(),'Usuarios')]"));
/* ________________________________________________________________________________________ */
5 - By.className â†’ aceptable si la clase es Ãºnica (ojo con clases generadas como btn btn-sm).
driver.findElement(By.className("nav-item"));
/* ________________________________________________________________________________________ */
6 - By.tagName â†’ muy general, casi nunca recomendable salvo casos especÃ­ficos (ej: <iframe>).
driver.findElement(By.tagName("iframe"));